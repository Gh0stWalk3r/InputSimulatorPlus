# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
- master

pool:
  vmImage: 'VS2017-Win2016'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'

steps:
#- task: NuGetToolInstaller@0

#- task: NuGetCommand@2
#  inputs:
#    restoreSolution: '$(solution)'

- script: dotnet tool install -g GitVersion.Tool --version 4.0.1-beta1-58
- script: dotnet gitversion /output buildserver
- bash: printenv | sort

- task: DotNetCoreCLI@2
  displayName: 'Build source'
  inputs:
    command: build
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run tests with coverage'
  inputs:
    command: test
    projects: '**/*.Tests.csproj'
    arguments: '--configuration $(buildConfiguration) /p:CollectCoverage=true /p:CoverletOutputFormat=opencover'

- powershell: |
    Get-ChildItem -Path $(Build.ArtifactStagingDirectory) -Recurse -File
  displayName: 'Show all files in directory'

- script: |
    %USERPROFILE%\.nuget\packages\codecov\1.1.0\tools\codecov.exe -f '**/coverage.opencover.xml' -t '$(CODECOV_TOKEN)''
  displayName: 'Upload coverage to codecov.io'

# - task: VSBuild@1
#   inputs:
#     solution: '$(solution)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'

# - task: VSTest@2
#   inputs:
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
