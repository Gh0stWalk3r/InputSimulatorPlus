# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  batch: true
  branches:
    include:
      - master
      - develop
      - release/*

pr:
  branches:
    include:
      - master
      - release/*

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 'true'

steps:
- task: DotNetCoreInstaller@0
  inputs:
    version: '2.2.401'

- script: |
    dotnet tool install -g GitVersion.Tool --version 5.0.1-beta1.14
  displayName: 'Install global tools'

- script: dotnet-gitversion /output buildserver
  displayName: 'Run GitVersion.Tool'

# - bash: printenv | sort
#   displayName: 'List environment variables'

- task: DotNetCoreCLI@2
  displayName: 'Build source'
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '--configuration $(buildConfiguration)'

- powershell: |
    $testsDirectory = Join-Path -Path '$(Build.SourcesDirectory)' -ChildPath 'tests'
    $testAssemblies = Get-ChildItem -Path "$testsDirectory" -Recurse -File -Filter '*.Tests.csproj' | Select-Object -ExpandProperty BaseName
    Write-Output "##vso[task.setvariable variable=testAssemblies]$($testAssemblies -join '|')"
  displayName: 'Set test assembly filter variable'

- task: DotNetCoreCLI@2
  displayName: 'Run tests with coverage'
  inputs:
    command: test
    projects: 'tests/**/*.Tests.csproj'
    arguments: '--configuration $(buildConfiguration) /p:AltCover=true /p:AltCoverOpenCover=true /p:AltCoverAssemblyExcludeFilter="xunit|$(testAssemblies)"'

- powershell: |
    $testsDirectory = Join-Path -Path '$(Build.SourcesDirectory)' -ChildPath 'tests'
    $coverageFile = Get-ChildItem -Path "$testsDirectory" -Recurse -File -Filter 'coverage.xml' | Select-Object -First 1
    & "$ENV:USERPROFILE\.nuget\packages\codecov\1.7.1\tools\codecov.exe" -f "$($coverageFile.FullName)" -t '$(CODECOV_TOKEN)'
  displayName: 'Upload coverage to codecov.io'

- task: DotNetCoreCLI@2
  displayName: 'Pack projects'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
  inputs:
    command: 'pack'
    packagesToPack: '$(solution)'
    nobuild: true
    includesymbols: true
    versioningScheme: 'byBuildNumber'

- task: NuGetToolInstaller@1
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
  inputs:
    versionSpec: '5.1.0'
    checkLatest: true

- task: NuGetCommand@2
  displayName: 'Push *.nupkg and *.snupkg to nuget.org'
  condition: and(succeeded(), or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')))
  inputs:
    command: 'push'
    packagesToPush: '$(Build.ArtifactStagingDirectory)/**/*.nupkg;!$(Build.ArtifactStagingDirectory)/**/*.symbols.nupkg'
    nuGetFeedType: 'external'
    publishFeedCredentials: 'NuGet.org'
    allowPackageConflicts: true
